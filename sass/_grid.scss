/* _grid.scss
-------------------------------------------------------------- */

// Defaults should be overidden in style.scss
$column-width: 60px;
$gutter-width: 20px;
$columns: 12;


/* Utility functions & mixins
-------------------------------------------------------------- */
// grid system width
@function gridsystem-width($columns:$columns) {
  @return ($column-width * $columns) + ($gutter-width * $columns);
}

// convert to ems
@function calc-em($target-px, $context) {
  @return ($target-px / $context) * 1em;
}


// The micro clearfix http://nicolasgallagher.com/micro-clearfix-hack/
@mixin clearfix() {
  *zoom:1;
  &:before,
  &:after {
    content:"";
    display:table;
  }
  &:after {
    clear:both;
  }
}


/* the Grid
-------------------------------------------------------------- */
// Set $total-width to 100% for a fluid layout in style.scss
$total-width: gridsystem-width($columns);


@mixin row($columns:$columns) {
  display: block;
  margin: 0 $total-width*((($gutter-width*.5)/gridsystem-width($columns))*-1);
  width: $total-width*(($gutter-width + gridsystem-width($columns))/gridsystem-width($columns));
  @include clearfix();
}

@mixin column($x,$columns:$columns) {
  margin: 0 $total-width*(($gutter-width*.5)/gridsystem-width($columns));
  width: $total-width*(((($gutter-width+$column-width)*$x)-$gutter-width) / gridsystem-width($columns));
}

@mixin push($offset:1) {
  margin-left: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}

@mixin pull($offset:1) {
  margin-right: $total-width*((($gutter-width+$column-width)*$offset) / gridsystem-width($columns)) + $total-width*(($gutter-width*.5)/gridsystem-width($columns));
}